
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true
spring.datasource.url=jdbc:mysql://${MYSQL_HOST:localhost}:3306/${MYSQL_DATABASE:db_example}
spring.datasource.username=${MYSQL_USER:springuser}
spring.datasource.password=${MYSQL_PASSWORD:ThePassword}
spring.jpa.open-in-view=false

kafka.admin.bootstrapAddress=${KAFKA_HOST:localhost}:29092
# spring.kafka.admin.properties.bootstrapAddress=localhost:29092
spring.kafka.consumer.bootstrap-servers: ${KAFKA_HOST:localhost}:29092
spring.kafka.consumer.group-id: ticket-svc
# spring.kafka.consumer.auto-offset-reset: earliest
#spring.kafka.consumer.key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
# spring.kafka.consumer.value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
 
spring.kafka.producer.bootstrap-servers: ${KAFKA_HOST:localhost}:29092
spring.kafka.producer.key-serializer: org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

spring.kafka.producer.value-serializer: com.example.ticket.utils.HibernateSerializer
spring.kafka.listener.ack-mode=record